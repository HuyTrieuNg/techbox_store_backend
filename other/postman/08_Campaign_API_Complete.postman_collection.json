{
	"info": {
		"_postman_id": "campaign-api-complete",
		"name": "08. Campaign API (Complete)",
		"description": "All 10 endpoints for campaign management with date formatting support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Campaigns (Paginated)",
			"event": [{
				"listen": "test",
				"script": {
					"exec": [
						"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));",
						"if (pm.response.json().content && pm.response.json().content.length > 0) {",
						"    pm.collectionVariables.set(\"campaign_id\", pm.response.json().content[0].id);",
						"}"
					]
				}
			}],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/campaigns?page=0&size=10&sortBy=createdAt&sortDir=DESC",
					"host": ["{{base_url}}"],
					"path": ["api", "campaigns"],
					"query": [
						{"key": "page", "value": "0"},
						{"key": "size", "value": "10"},
						{"key": "sortBy", "value": "createdAt"},
						{"key": "sortDir", "value": "DESC"}
					]
				}
			}
		},
		{
			"name": "Get Active Campaigns",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/api/campaigns/active"
			}
		},
		{
			"name": "Get Scheduled Campaigns",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/api/campaigns/scheduled"
			}
		},
		{
			"name": "Get Expired Campaigns",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/api/campaigns/expired"
			}
		},
		{
			"name": "Get Campaign By ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/api/campaigns/{{campaign_id}}"
			}
		},
		{
			"name": "Create Campaign (With Image)",
			"event": [{
				"listen": "prerequest",
				"script": {
					"exec": [
						"const formatDate = (date) => {",
						"    const pad = (n) => String(n).padStart(2, '0');",
						"    const padMs = (n) => String(n).padStart(6, '0');",
						"    return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) +",
						"           'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) +",
						"           '.' + padMs(date.getMilliseconds() * 1000);",
						"};",
						"",
						"const now = new Date();",
						"const startDate = new Date(now.getTime() + 1 * 24 * 60 * 60 * 1000);",
						"const endDate = new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000);",
						"",
						"pm.collectionVariables.set(\"campaign_name\", \"Campaign \" + Date.now());",
						"pm.collectionVariables.set(\"campaign_start_date\", formatDate(startDate));",
						"pm.collectionVariables.set(\"campaign_end_date\", formatDate(endDate));"
					]
				}
			},
			{
				"listen": "test",
				"script": {
					"exec": [
						"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
						"if (pm.response.code === 201) {",
						"    pm.collectionVariables.set(\"created_campaign_id\", pm.response.json().id);",
						"}"
					]
				}
			}],
			"request": {
				"method": "POST",
				"header": [
					{"key": "Authorization", "value": "Bearer {{access_token}}"}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{"key": "name", "value": "{{campaign_name}}", "type": "text"},
						{"key": "description", "value": "Test campaign description", "type": "text"},
						{"key": "startDate", "value": "{{campaign_start_date}}", "type": "text"},
						{"key": "endDate", "value": "{{campaign_end_date}}", "type": "text"},
						{"key": "image", "type": "file", "src": "", "disabled": true}
					]
				},
				"url": "{{base_url}}/api/campaigns"
			}
		},
		{
			"name": "Create Campaign (Without Image)",
			"event": [{
				"listen": "prerequest",
				"script": {
					"exec": [
						"const formatDate = (date) => {",
						"    const pad = (n) => String(n).padStart(2, '0');",
						"    const padMs = (n) => String(n).padStart(6, '0');",
						"    return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) +",
						"           'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) +",
						"           '.' + padMs(date.getMilliseconds() * 1000);",
						"};",
						"",
						"const now = new Date();",
						"const startDate = new Date(now.getTime() + 1 * 24 * 60 * 60 * 1000);",
						"const endDate = new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000);",
						"",
						"pm.collectionVariables.set(\"campaign_name\", \"Campaign \" + Date.now());",
						"pm.collectionVariables.set(\"campaign_start_date\", formatDate(startDate));",
						"pm.collectionVariables.set(\"campaign_end_date\", formatDate(endDate));"
					]
				}
			},
			{
				"listen": "test",
				"script": {
					"exec": [
						"pm.test(\"Status code is 201\", () => pm.response.to.have.status(201));",
						"if (pm.response.code === 201) {",
						"    pm.collectionVariables.set(\"created_campaign_id\", pm.response.json().id);",
						"}"
					]
				}
			}],
			"request": {
				"method": "POST",
				"header": [
					{"key": "Authorization", "value": "Bearer {{access_token}}"}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{"key": "name", "value": "{{campaign_name}}", "type": "text"},
						{"key": "description", "value": "Test campaign without image", "type": "text"},
						{"key": "startDate", "value": "{{campaign_start_date}}", "type": "text"},
						{"key": "endDate", "value": "{{campaign_end_date}}", "type": "text"}
					]
				},
				"url": "{{base_url}}/api/campaigns"
			}
		},
		{
			"name": "Update Campaign (With Image)",
			"event": [{
				"listen": "prerequest",
				"script": {
					"exec": [
						"const formatDate = (date) => {",
						"    const pad = (n) => String(n).padStart(2, '0');",
						"    const padMs = (n) => String(n).padStart(6, '0');",
						"    return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) +",
						"           'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) +",
						"           '.' + padMs(date.getMilliseconds() * 1000);",
						"};",
						"",
						"const now = new Date();",
						"const startDate = new Date(now.getTime() + 2 * 24 * 60 * 60 * 1000);",
						"const endDate = new Date(now.getTime() + 45 * 24 * 60 * 60 * 1000);",
						"",
						"pm.collectionVariables.set(\"campaign_start_date\", formatDate(startDate));",
						"pm.collectionVariables.set(\"campaign_end_date\", formatDate(endDate));"
					]
				}
			}],
			"request": {
				"method": "PUT",
				"header": [
					{"key": "Authorization", "value": "Bearer {{access_token}}"}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{"key": "name", "value": "{{campaign_name}} Updated", "type": "text"},
						{"key": "description", "value": "Updated campaign description", "type": "text"},
						{"key": "startDate", "value": "{{campaign_start_date}}", "type": "text"},
						{"key": "endDate", "value": "{{campaign_end_date}}", "type": "text"},
						{"key": "image", "type": "file", "src": "", "disabled": true}
					]
				},
				"url": "{{base_url}}/api/campaigns/{{created_campaign_id}}"
			}
		},
		{
			"name": "Update Campaign (Without Image)",
			"event": [{
				"listen": "prerequest",
				"script": {
					"exec": [
						"const formatDate = (date) => {",
						"    const pad = (n) => String(n).padStart(2, '0');",
						"    const padMs = (n) => String(n).padStart(6, '0');",
						"    return date.getFullYear() + '-' + pad(date.getMonth() + 1) + '-' + pad(date.getDate()) +",
						"           'T' + pad(date.getHours()) + ':' + pad(date.getMinutes()) + ':' + pad(date.getSeconds()) +",
						"           '.' + padMs(date.getMilliseconds() * 1000);",
						"};",
						"",
						"const now = new Date();",
						"const startDate = new Date(now.getTime() + 2 * 24 * 60 * 60 * 1000);",
						"const endDate = new Date(now.getTime() + 45 * 24 * 60 * 60 * 1000);",
						"",
						"pm.collectionVariables.set(\"campaign_start_date\", formatDate(startDate));",
						"pm.collectionVariables.set(\"campaign_end_date\", formatDate(endDate));"
					]
				}
			}],
			"request": {
				"method": "PUT",
				"header": [
					{"key": "Authorization", "value": "Bearer {{access_token}}"}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{"key": "name", "value": "{{campaign_name}} Updated", "type": "text"},
						{"key": "description", "value": "Updated campaign without changing image", "type": "text"},
						{"key": "startDate", "value": "{{campaign_start_date}}", "type": "text"},
						{"key": "endDate", "value": "{{campaign_end_date}}", "type": "text"}
					]
				},
				"url": "{{base_url}}/api/campaigns/{{created_campaign_id}}"
			}
		},
		{
			"name": "Delete Campaign",
			"request": {
				"method": "DELETE",
				"header": [
					{"key": "Authorization", "value": "Bearer {{access_token}}"}
				],
				"url": "{{base_url}}/api/campaigns/{{created_campaign_id}}"
			}
		},
		{
			"name": "Restore Campaign",
			"request": {
				"method": "POST",
				"header": [
					{"key": "Authorization", "value": "Bearer {{access_token}}"}
				],
				"url": "{{base_url}}/api/campaigns/{{created_campaign_id}}/restore"
			}
		}
	],
	"variable": [
		{"key": "base_url", "value": "http://localhost:8080"},
		{"key": "access_token", "value": ""},
		{"key": "campaign_id", "value": "1"},
		{"key": "created_campaign_id", "value": ""},
		{"key": "campaign_name", "value": ""},
		{"key": "campaign_start_date", "value": ""},
		{"key": "campaign_end_date", "value": ""}
	]
}
